import{_ as n,o as s,c as a,f as e,e as t}from"./app.2a81dd92.js";const o={},l=t(`<div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>코드에서 변수가 필요한 이유는?</li><li>상수도 메모리에 저장될까?</li></ul></div><ul><li>파이썬에서 <strong>식별자(변수명)</strong> 에 값을 할당해서 변수를 생성한다.</li><li><code>code</code> 상에서 작성된 변수는 실행 시에 변수에 할당된 값을 의미한다.</li><li><strong>할당(<code>=</code>) 연산자</strong>의 왼쪽에 표현된 변수 이름은 메모리 공간을 의미한다.</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><ul><li>파이썬에서 사용중인 <strong>keyword</strong> 들은 식별자(변수명, 함수명)로 사용하지 않는다.</li></ul></div><h1 id="자료형" tabindex="-1"><a class="header-anchor" href="#자료형" aria-hidden="true">#</a> 자료형</h1><ul><li>변수에 저장되는 값에 의해 <strong>자료형(type)</strong> 이 결정된다.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>val <span class="token operator">=</span> <span class="token boolean">True</span>      <span class="token comment"># boolean</span>
val <span class="token operator">=</span> <span class="token number">1</span>         <span class="token comment"># integer</span>
val <span class="token operator">=</span> <span class="token number">3.14</span>      <span class="token comment"># float</span>
val <span class="token operator">=</span> <span class="token string">&#39;python&#39;</span>  <span class="token comment"># string</span>
val <span class="token operator">=</span> <span class="token boolean">None</span>      <span class="token comment"># None</span>
val <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment"># list</span>
val <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token comment"># dictionay</span>
val <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># tuple</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>컨테이너</strong> 자료형들은 생성함수들을 사용할 수 있다.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>val_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
val_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
val_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="operator" tabindex="-1"><a class="header-anchor" href="#operator" aria-hidden="true">#</a> Operator</h2><ul><li>연산자는 컴퓨터에 명령을 할 수 있는 가장 작은 계산 작업이다.</li><li>자료형에는 사용할 수 있는 연산자들이 정해져 있다.</li><li>피연산자의 자료형에 의해 달리 동작하는 연산자들이 있다.</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>단항 연산자가 이항 연산자보다 우선 순위가 높다.</li><li>할당 연산자는 마지막에 실행된다.</li><li>리스트 인덱스, 함수 호출, 슬라이싱은 우선순위가 높다.</li><li>사칙연산자 &gt; 비트 연산자 &gt; 비교 연산자 &gt; 논리 연산자</li></ul></div><h2 id="수식" tabindex="-1"><a class="header-anchor" href="#수식" aria-hidden="true">#</a> 수식</h2><ul><li>상수, 혹은 변수만 작성해도 수식이 된다.</li><li>함수는 값을 반환하면 <strong>함수 호출</strong> 도 수식이다.</li><li>수식은 하나의 값으로 계산(평가)된다.</li></ul><h2 id="형변환" tabindex="-1"><a class="header-anchor" href="#형변환" aria-hidden="true">#</a> 형변환</h2><ul><li><p><strong>암시적 형변환</strong> : 파이썬 인터프리터가 수행</p><ul><li><em>이항 연산자</em> 에 적용된 피연산자들의 자료형이 다르면 형변환을 시도한다.</li></ul></li><li><p><strong>명시적 형변환</strong> : 프로그래머가 의도적으로 수행</p></li></ul><h2 id="추가-참고" tabindex="-1"><a class="header-anchor" href="#추가-참고" aria-hidden="true">#</a> 추가 참고</h2><ul><li><p><code>boolean</code> 자료형이 아니라도 <strong>논리 연산</strong> 이나 <code>bool()</code> 에 적용된 값들은 <code>True/False</code> 로 변환</p><ul><li><code>0</code>, <code>0,0</code>, <code>None</code>, <code>[]</code>, <code>()</code>, <code>{}</code> ==&gt; <strong><code>False</code></strong></li><li>그 외는, <strong><code>True</code></strong></li></ul></li><li><p>단축평가</p></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">0.0</span> <span class="token keyword">or</span> <span class="token number">1.1</span><span class="token punctuation">)</span>     <span class="token comment"># 1.1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function p(c,i){return s(),a("div",null,[l,e(" @[code](./codes/10_03_writetext.py) ")])}const d=n(o,[["render",p],["__file","01_data_type.html.vue"]]);export{d as default};

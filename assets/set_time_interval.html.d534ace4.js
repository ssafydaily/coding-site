import{_ as c,r as p,o as l,c as i,a as n,d as s,b as a,e as o}from"./app.2a81dd92.js";const u={},r=o(`<h1 id="settimeout-setinterval" tabindex="-1"><a class="header-anchor" href="#settimeout-setinterval" aria-hidden="true">#</a> setTimeout, setInterval</h1><h2 id="settimeout" tabindex="-1"><a class="header-anchor" href="#settimeout" aria-hidden="true">#</a> setTimeout()</h2><ul><li>대기 시간(<code>dealy</code>)이 만료된 후 함수나 코드 조각을 실행한다.</li></ul><div class="custom-container tip"><p class="custom-container-title">구문</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">[</span><span class="token punctuation">,</span> delay<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">[</span><span class="token punctuation">,</span> delay<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>code<span class="token punctuation">[</span><span class="token punctuation">,</span> delay<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 권장하지 않음</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="매개-변수" tabindex="-1"><a class="header-anchor" href="#매개-변수" aria-hidden="true">#</a> 매개 변수</h4><ul><li><code>function</code>: 타이머가 만료된 뒤 실행한 함수</li><li><code>delay</code>: 대기 시간으로 밀리세컨드 단위, 생략하거나 0을 지정할 경우, 다음 이벤트 싸이클에 실행함을 의미한다.</li><li><code>arg1, ...</code>: 함수에 전달할 추가 매개변수</li></ul><h4 id="반환값" tabindex="-1"><a class="header-anchor" href="#반환값" aria-hidden="true">#</a> 반환값</h4><ul><li>반환값은 양의 정수로, <code>setTimeout()</code> 이 생성한 <strong>타이머</strong>의 식별값이다.</li><li><code>clearTimeout()</code>으로 타이머를 취소할 수 있다.</li></ul><h2 id="설명" tabindex="-1"><a class="header-anchor" href="#설명" aria-hidden="true">#</a> 설명</h2><h4 id="비동기-함수" tabindex="-1"><a class="header-anchor" href="#비동기-함수" aria-hidden="true">#</a> 비동기 함수</h4><ul><li><code>setTimeout()</code>은 비동기 함수로 함수 스택의 다른 함수 호출을 막지 않는다.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;첫 번째 메시지&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;두 번째 메시지&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;세 번째 메시지&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 콘솔 출력:</span>

<span class="token comment">// 세 번째 메시지</span>
<span class="token comment">// 두 번째 메시지</span>
<span class="token comment">// 첫 번째 메시지</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="this-문제" tabindex="-1"><a class="header-anchor" href="#this-문제" aria-hidden="true">#</a> <code>this</code> 문제</h4>`,13),d=n("strong",null,"this 이해하기",-1),k={href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this#%EA%B0%9D%EC%B2%B4%EC%9D%98_%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C%EC%84%9C",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,[n("code",null,"setTimeout()"),a("이 실행하는 함수(코드)는 "),n("code",null,"setTimeout()"),a("을 호출했던 함수와는 다른 실행 맥락에서 호출된다.")],-1),m=n("h4",{id:"지연-delay-이-지정한-값보다-더-긴-경우",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#지연-delay-이-지정한-값보다-더-긴-경우","aria-hidden":"true"},"#"),a(" 지연(delay)이 지정한 값보다 더 긴 경우")],-1),h={href:"https://developer.mozilla.org/ko/docs/Web/API/setTimeout#%EB%94%9C%EB%A0%88%EC%9D%B4%EA%B0%80_%EC%A7%80%EC%A0%95%ED%95%9C_%EA%B0%92%EB%B3%B4%EB%8B%A4_%EB%8D%94_%EA%B8%B4_%EC%9D%B4%EC%9C%A0",target:"_blank",rel:"noopener noreferrer"},b=o(`<hr><h2 id="setinterval" tabindex="-1"><a class="header-anchor" href="#setinterval" aria-hidden="true">#</a> setInterval()</h2><div class="custom-container tip"><p class="custom-container-title">구문</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setInterval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> delay<span class="token punctuation">)</span>

<span class="token keyword">const</span> intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
<span class="token keyword">const</span> intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="매개-변수-1" tabindex="-1"><a class="header-anchor" href="#매개-변수-1" aria-hidden="true">#</a> 매개 변수</h4><ul><li><code>func</code>: <em>delay</em> 마다 실행되는 함수. 첫 번째 실행한 <code>delay</code> 후에 발생</li><li><code>delay</code>: 타이머가 지정된 함수 또는 코드 실행 사이에 지연해야 하는 밀리초(1/1000초) 단위의 시간</li></ul><h4 id="반환-값" tabindex="-1"><a class="header-anchor" href="#반환-값" aria-hidden="true">#</a> 반환 값</h4><ul><li><code>intervalId</code>: <code>setInterval()</code> 호출로 생성된 <strong>타이머</strong>의 식별값. 0이 아닌 양의 정수.</li><li><code>clearInterval()</code>에 의해 취소</li></ul><h3 id="예제" tabindex="-1"><a class="header-anchor" href="#예제" aria-hidden="true">#</a> 예제</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> intervalID <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>myCallback<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;Parameter 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Parameter 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">myCallback</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>1초 마다 글자 색상을 토글링 하고, 중단하는 예제</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>무슨 색깔<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stop<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.red</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">}</span>
<span class="token selector">.blue</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">const</span> title <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#title&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> startBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#start&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> stoptBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#stop&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> intervalId <span class="token operator">=</span> <span class="token keyword">null</span>
    
    startBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>intervalId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          title<span class="token punctuation">.</span>className <span class="token operator">=</span> title<span class="token punctuation">.</span>className <span class="token operator">===</span> <span class="token string">&#39;red&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    stoptBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>intervalId<span class="token punctuation">)</span>
      intervalId <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function g(f,_){const t=p("Badge"),e=p("ExternalLinkIcon");return l(),i("div",null,[r,n("ul",null,[n("li",null,[d,n("a",k,[s(t,{type:"tip",text:"link",vertical:"middle"}),s(e)])]),v]),m,n("ul",null,[n("li",null,[a("MDN 참고 "),n("a",h,[s(t,{type:"tip",text:"link",vertical:"middle"}),s(e)])])]),b])}const B=c(u,[["render",g],["__file","set_time_interval.html.vue"]]);export{B as default};

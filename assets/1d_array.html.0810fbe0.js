import{_ as n,o as s,c as a,e}from"./app.2a81dd92.js";const p={},t=e(`<h1 id="_1차-배열-기본" tabindex="-1"><a class="header-anchor" href="#_1차-배열-기본" aria-hidden="true">#</a> 1차 배열 기본</h1><ul><li><p>입력 값들이 양의 정수이고, 적당한 범위내의 값들이다.</p><ul><li><p>값을 배열의 인덱스로 사용</p></li><li><p>최대값을 알아야 배열(List[])의 크기를 정할 수 있다.</p></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>MAX_VAL <span class="token operator">=</span> <span class="token number">100</span>                <span class="token comment">#  자료</span>
cnt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>MAX_VAL <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># 배열의 크기에 주의</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="최대-최소-위치-찾기" tabindex="-1"><a class="header-anchor" href="#최대-최소-위치-찾기" aria-hidden="true">#</a> 최대/최소 위치 찾기</h2><ul><li>최대/최소가 여러개 일 경우 처음과 마지막 위치 찾기</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>MAX_VAL <span class="token operator">=</span> <span class="token number">100</span>                <span class="token comment">#  자료</span>
cnt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>MAX_VAL <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># 배열의 크기에 주의</span>
<span class="token comment"># 카운팅 작업</span>

max_idx <span class="token operator">=</span> <span class="token number">0</span>                  <span class="token comment"># 최대값 위치 저장</span>
<span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> MAX_VAL <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> cnt<span class="token punctuation">[</span>max_idx<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> cnt<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token comment"># 최대값이 다수일 때 마지막 위치 찾기</span>
        max_idx <span class="token operator">=</span> idx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="중첩-반복문" tabindex="-1"><a class="header-anchor" href="#중첩-반복문" aria-hidden="true">#</a> 중첩 반복문</h2><ul><li><p>for와 while 중에 어떤 걸 사용할지 생각한다.</p></li><li><p>항상 들여쓰기에 주의한다.</p></li><li><p>반복에 사용되는 변수명에 주의한다.</p><ul><li>자신만의 스타일을 정한다.</li></ul></li></ul><hr><h2 id="반복문-탈출하기" tabindex="-1"><a class="header-anchor" href="#반복문-탈출하기" aria-hidden="true">#</a> 반복문 탈출하기</h2><ul><li>상태(flag) 변수 활용하기</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>flag <span class="token operator">=</span> <span class="token boolean">False</span>


<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># code</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> codition <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            <span class="token comment"># code</span>
            flag <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token comment"># 상태 저장하고 탈출</span>
            <span class="token keyword">break</span> 
    <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
        <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[t];function l(c,i){return s(),a("div",null,o)}const d=n(p,[["render",l],["__file","1d_array.html.vue"]]);export{d as default};

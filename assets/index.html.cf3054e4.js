import{_ as n,o as s,c as a,e as t}from"./app.2a81dd92.js";const e="/coding-site/assets/min_max01.98a2da99.png",p="/coding-site/assets/min_max02.3d035655.png",i="/coding-site/assets/min_max03.1ff2c8c8.png",o="/coding-site/assets/min_max04.55cc110d.png",l="/coding-site/assets/min_max05.f11e272c.png",c="/coding-site/assets/min_max06.ee807594.png",u="/coding-site/assets/min_idx01.38d6a969.png",d="/coding-site/assets/min_idx02.842cc275.png",r="/coding-site/assets/min_idx03.835bfa45.png",m={},k=t(`<h1 id="최소-최대-구하기" tabindex="-1"><a class="header-anchor" href="#최소-최대-구하기" aria-hidden="true">#</a> 최소/최대 구하기</h1><h3 id="최소값-구하기" tabindex="-1"><a class="header-anchor" href="#최소값-구하기" aria-hidden="true">#</a> 최소값 구하기</h3><ul><li><code>lst</code> 에서 최소값을 찾는다.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+e+`" alt="min_max01" width="450"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>min_val <span class="token operator">=</span> lst<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>         <span class="token comment"># lst[0]을 지금까지 발견한 최소값으로 가정</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>lst</code>를 순회한 후 최소값을 저장할 변수(<code>min_val</code>)가 필요하다.</li><li><code>min_val</code>의 초기값으로 <code>lst[0]</code>을 저장한다.</li><li>또는, <code>lst</code>에 값보다 큰 값으로 설정해도 된다.</li></ul><hr><img title="" src="`+p+`" alt="min_max02" width="450"><ul><li><code>lst</code>의 첫번째 <strong>9</strong>를 가져와서 비교하면 <code>False</code> 이므로 다음으로</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>min_val <span class="token operator">=</span> lst<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>         
<span class="token keyword">for</span> val <span class="token keyword">in</span> lst<span class="token punctuation">:</span>
    <span class="token keyword">if</span> min_val <span class="token operator">&gt;</span> val<span class="token punctuation">:</span>
        min_val <span class="token operator">=</span> val
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>다음, <strong>7</strong>이 <strong>9</strong> 보다 작으니 <code>min_val</code>에 저장</li></ul><img src="`+i+'" title="" alt="min_max03" width="450"><hr><ul><li>다음, <strong>13 SKIP</strong></li></ul><img src="'+o+'" title="" alt="min_max04" width="450"><hr><ul><li>다음, <strong>5</strong> 가 더 작은 값이므로 저장</li></ul><img src="'+l+'" title="" alt="min_max05" width="450"><hr><ul><li><p>다음, <strong>8</strong>과 <strong>10</strong> 은 차례로 <strong>SKIP</strong></p></li><li><p><strong>2</strong>가 <strong>5</strong>보다 작으므로 저장</p></li></ul><img title="" src="'+c+'" alt="min_max06" width="450"><ul><li><code>for</code> 문이 종료하면 <code>min_val</code>에는 <strong>최소값 2</strong>가 저장된 상태</li></ul><h3 id="최소값-위치-찾기" tabindex="-1"><a class="header-anchor" href="#최소값-위치-찾기" aria-hidden="true">#</a> 최소값 위치 찾기</h3><ul><li><p><code>min_idx</code> 변수에 최소값의 위치를 계산해서 저장</p></li><li><p>초기값은 첫번째 값의 인덱스인 <strong>0</strong>을 저장</p></li></ul><img src="'+u+`" title="" alt="min_idx01" width="450"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>min_idx <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment"># 1부터 시작하는 인덱스</span>
    <span class="token keyword">if</span> lst<span class="token punctuation">[</span>min_idx<span class="token punctuation">]</span> <span class="token operator">&gt;</span> lst<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>
        min_idx <span class="token operator">=</span> idx

<span class="token keyword">print</span><span class="token punctuation">(</span>min_idx<span class="token punctuation">,</span> lst<span class="token punctuation">[</span>min_idx<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>min_idx</code>에 인덱스가 저장하므로, <code>range(1, len(lst))</code> 로 인덱스를 생성.</li><li>이때, 0번은 할 필요가 없으므로, 1번 인덱스 부터 생성.</li></ul><hr><img src="`+d+'" title="" alt="min_idx01" width="450"><hr><img src="'+r+`" title="" alt="min_idx01" width="450"><blockquote><p><strong>초기값 설정</strong></p><ul><li><p>리스트의 첫번째 값을 설정할 수 없는 경우가 있다.</p></li><li><p>반복해서 계산된 값들 중에 최소/최대 값을 찾는 경우에는 변수 생성시 저장할 값이 아직 없다.</p></li><li><p>이럴 경우에는, 최소값을 구하는 경우에는 계산값으로 나올 수 있는 최대값과 <strong>같거나 큰값</strong> 을 저장한다. 최대값을 구하는 경우에는 작은값을 저장한다.</p></li></ul></blockquote><hr><h4 id="최소-최대-값이-둘-이상일때" tabindex="-1"><a class="header-anchor" href="#최소-최대-값이-둘-이상일때" aria-hidden="true">#</a> 최소(최대)값이 둘 이상일때</h4><ul><li><p>문제에서 최소값이 하나가 아니고 여러개 일때, 순서상 가장 먼저 나오는 위치 또는 가장 마지막 위치를 찾아야 하는 경우</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span>
min_idx <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment"># lst에 인덱스 사용</span>
    <span class="token keyword">if</span> lst<span class="token punctuation">[</span>min_idx<span class="token punctuation">]</span> <span class="token operator">&gt;</span> lst<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># lst[2]일 경우에만 True</span>
        min_idx <span class="token operator">=</span> idx

<span class="token keyword">print</span><span class="token punctuation">(</span>min_idx<span class="token punctuation">,</span> lst<span class="token punctuation">[</span>min_idx<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>위 코드에서는 처음 나오는 <code>lst[2]</code> 의 경우에만 조건이 <code>True</code></p></li><li><p>아래와 같이 등호(<code>=</code>)를 포함해서 비교하게 되면, 마지막에 나오는 최소값의 위치가 <code>min_idx</code> 에 저장</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     
    <span class="token keyword">if</span> lst<span class="token punctuation">[</span>min_idx<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> lst<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 같은 값인 경우 모두 True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,37),g=[k];function v(_,b){return s(),a("div",null,g)}const x=n(m,[["render",v],["__file","index.html.vue"]]);export{x as default};

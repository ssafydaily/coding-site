import{_ as n,o as s,c as a,e as t}from"./app.2a81dd92.js";const p={},e=t(`<h1 id="tmdb-data-db" tabindex="-1"><a class="header-anchor" href="#tmdb-data-db" aria-hidden="true">#</a> TMDB Data -&gt; DB</h1><h2 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h2><ul><li>Movie는 Genre 와 Actor 에 대해 <strong>N:M</strong> 관계를 가진다.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># models.py</span>
<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models
<span class="token keyword">from</span> django<span class="token punctuation">.</span>conf <span class="token keyword">import</span> settings
<span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> JsonResponse

<span class="token keyword">class</span> <span class="token class-name">Genre</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Actor</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>
    release_date <span class="token operator">=</span> models<span class="token punctuation">.</span>DateField<span class="token punctuation">(</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    popularity <span class="token operator">=</span> models<span class="token punctuation">.</span>FloatField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    vote_count <span class="token operator">=</span> models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    vote_average <span class="token operator">=</span> models<span class="token punctuation">.</span>FloatField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    overview <span class="token operator">=</span> models<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    poster_path <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>
    youtube_key <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>
    genres <span class="token operator">=</span> models<span class="token punctuation">.</span>ManyToManyField<span class="token punctuation">(</span>Genre<span class="token punctuation">)</span>
    like_users <span class="token operator">=</span> models<span class="token punctuation">.</span>ManyToManyField<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>AUTH_USER_MODEL<span class="token punctuation">)</span>
    actors <span class="token operator">=</span> models<span class="token punctuation">.</span>ManyToManyField<span class="token punctuation">(</span>Actor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="장르-데이터-저장하기" tabindex="-1"><a class="header-anchor" href="#장르-데이터-저장하기" aria-hidden="true">#</a> 장르 데이터 저장하기</h3><ul><li><code>API_KEY</code>는 <strong>tmdb</strong> 의 자신의 <code>api_key</code> 작성</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views.py</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Genre<span class="token punctuation">,</span> Movie<span class="token punctuation">,</span> Actor
<span class="token keyword">import</span> requests

API_KEY <span class="token operator">=</span> <span class="token string">&#39;your-tmdb-api-key&#39;</span>
GENRE_URL <span class="token operator">=</span> <span class="token string">&#39;https://api.themoviedb.org/3/genre/movie/list&#39;</span>
POPULAR_MOVIE_URL <span class="token operator">=</span> <span class="token string">&#39;https://api.themoviedb.org/3/movie/popular&#39;</span>

<span class="token keyword">def</span> <span class="token function">tmdb_genres</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
        GENRE_URL<span class="token punctuation">,</span>
        params<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&#39;api_key&#39;</span><span class="token punctuation">:</span> API_KEY<span class="token punctuation">,</span>
            <span class="token string">&#39;language&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ko-KR&#39;</span><span class="token punctuation">,</span>            
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    
    <span class="token keyword">for</span> genre <span class="token keyword">in</span> response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;genres&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> Genre<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>pk<span class="token operator">=</span>genre<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>        
        <span class="token keyword">print</span><span class="token punctuation">(</span>genre<span class="token punctuation">)</span>
        Genre<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>
            <span class="token builtin">id</span><span class="token operator">=</span>genre<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            name<span class="token operator">=</span>genre<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">)</span>
    <span class="token keyword">return</span> JsonResponse<span class="token punctuation">(</span>response<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tmdb-영화-검색하기" tabindex="-1"><a class="header-anchor" href="#tmdb-영화-검색하기" aria-hidden="true">#</a> TMDB 영화 검색하기</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">movie_data</span><span class="token punctuation">(</span>page<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
        POPULAR_MOVIE_URL<span class="token punctuation">,</span>
        params<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&#39;api_key&#39;</span><span class="token punctuation">:</span> API_KEY<span class="token punctuation">,</span>
            <span class="token string">&#39;language&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ko-kr&#39;</span><span class="token punctuation">,</span>     
            <span class="token string">&#39;page&#39;</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span>       
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> movie_dict <span class="token keyword">in</span> response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;release_date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>   <span class="token comment"># 없는 필드 skip</span>
        <span class="token comment"># 유투브 key 조회</span>
        youtube_key <span class="token operator">=</span> get_youtube_key<span class="token punctuation">(</span>movie_dict<span class="token punctuation">)</span>

        movie <span class="token operator">=</span> Movie<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>
            <span class="token builtin">id</span><span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            title<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            release_date<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;release_date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            popularity<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;popularity&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vote_count<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;vote_count&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vote_average<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;vote_average&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            overview<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;overview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            poster_path<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;poster_path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   
            youtube_key<span class="token operator">=</span>youtube_key         
        <span class="token punctuation">)</span>
        <span class="token keyword">for</span> genre_id <span class="token keyword">in</span> movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;genre_ids&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            movie<span class="token punctuation">.</span>genres<span class="token punctuation">.</span>add<span class="token punctuation">(</span>genre_id<span class="token punctuation">)</span>

        <span class="token comment"># 배우들 저장</span>
        get_actors<span class="token punctuation">(</span>movie<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&gt;&gt;&#39;</span><span class="token punctuation">,</span> movie<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token string">&#39;==&gt;&#39;</span><span class="token punctuation">,</span> movie<span class="token punctuation">.</span>youtube_key<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views.py</span>
<span class="token keyword">def</span> <span class="token function">get_youtube_key</span><span class="token punctuation">(</span>movie_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>    
    movie_id <span class="token operator">=</span> movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
        <span class="token string-interpolation"><span class="token string">f&#39;https://api.themoviedb.org/3/movie/</span><span class="token interpolation"><span class="token punctuation">{</span>movie_id<span class="token punctuation">}</span></span><span class="token string">/videos&#39;</span></span><span class="token punctuation">,</span>
        params<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&#39;api_key&#39;</span><span class="token punctuation">:</span> API_KEY
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> video <span class="token keyword">in</span> response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> video<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;site&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;YouTube&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> video<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;nothing&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_actors</span><span class="token punctuation">(</span>movie<span class="token punctuation">)</span><span class="token punctuation">:</span>
    movie_id <span class="token operator">=</span> movie<span class="token punctuation">.</span><span class="token builtin">id</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
        <span class="token string-interpolation"><span class="token string">f&#39;https://api.themoviedb.org/3/movie/</span><span class="token interpolation"><span class="token punctuation">{</span>movie_id<span class="token punctuation">}</span></span><span class="token string">/credits&#39;</span></span><span class="token punctuation">,</span>
        params<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&#39;api_key&#39;</span><span class="token punctuation">:</span> API_KEY<span class="token punctuation">,</span>
            <span class="token string">&#39;language&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ko-kr&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> person <span class="token keyword">in</span> response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;cast&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> person<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;known_for_department&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39;Acting&#39;</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>
        actor_id <span class="token operator">=</span> person<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> Actor<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>pk<span class="token operator">=</span>actor_id<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            actor <span class="token operator">=</span> Actor<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>
                <span class="token builtin">id</span><span class="token operator">=</span>person<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                name<span class="token operator">=</span>person<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        movie<span class="token punctuation">.</span>actors<span class="token punctuation">.</span>add<span class="token punctuation">(</span>actor_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> movie<span class="token punctuation">.</span>actors<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="실행-함수" tabindex="-1"><a class="header-anchor" href="#실행-함수" aria-hidden="true">#</a> 실행 함수</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views.py</span>
<span class="token keyword">def</span> <span class="token function">tmdb_data</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Genre<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>
    Actor<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>
    Movie<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>

    tmdb_genres<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        movie_data<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">&#39;OK &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="serializer-를-활용해서-저장하기" tabindex="-1"><a class="header-anchor" href="#serializer-를-활용해서-저장하기" aria-hidden="true">#</a> Serializer 를 활용해서 저장하기</h2><h3 id="serializer-작성" tabindex="-1"><a class="header-anchor" href="#serializer-작성" aria-hidden="true">#</a> <code>Serializer</code> 작성</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">GenreSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Genre
        fields <span class="token operator">=</span> <span class="token string">&#39;__all__&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">MovieSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">UserSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
            model <span class="token operator">=</span> get_user_model
            fields <span class="token operator">=</span> <span class="token string">&#39;__all__&#39;</span>

    genres <span class="token operator">=</span> GenreSerializer<span class="token punctuation">(</span>many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> read_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># DB --&gt; Json</span>
    genre_ids <span class="token operator">=</span> serializers<span class="token punctuation">.</span>ListField<span class="token punctuation">(</span>write_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># Json --&gt; DB</span>
    like_users <span class="token operator">=</span> UserSerializer<span class="token punctuation">(</span>many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> read_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    overview <span class="token operator">=</span> serializers<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>allow_blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> validated_data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        genre_ids <span class="token operator">=</span> validated_data<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&#39;genre_ids&#39;</span><span class="token punctuation">)</span>        
        movie <span class="token operator">=</span> Movie<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token operator">**</span>validated_data<span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token builtin">id</span> <span class="token keyword">in</span> genre_ids<span class="token punctuation">:</span>
            movie<span class="token punctuation">.</span>genres<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span>        
        <span class="token keyword">return</span> movie

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Movie
        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;release_date&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;popularity&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;vote_count&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;vote_average&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;overview&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;poster_path&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;genres&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;genre_ids&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;like_users&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="view-함수" tabindex="-1"><a class="header-anchor" href="#view-함수" aria-hidden="true">#</a> view 함수</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">tmdb_movies</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> page<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    POPULAR_MOVIE_URL <span class="token operator">=</span> <span class="token string">&#39;https://api.themoviedb.org/3/movie/popular&#39;</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
        POPULAR_MOVIE_URL<span class="token punctuation">,</span>
        params<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&#39;api_key&#39;</span><span class="token punctuation">:</span> API_KEY<span class="token punctuation">,</span>
            <span class="token string">&#39;language&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ko-KR&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;page&#39;</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    

    <span class="token keyword">for</span> movie_dict <span class="token keyword">in</span> response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        
        <span class="token keyword">if</span> Movie<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>title<span class="token operator">=</span>movie_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>

        serializer <span class="token operator">=</span> MovieSerializer<span class="token punctuation">(</span>data<span class="token operator">=</span>movie_dict<span class="token punctuation">)</span>        
        <span class="token keyword">if</span> serializer<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span>raise_exception<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            serializer<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># return JsonResponse(response)</span>
    <span class="token keyword">return</span> JsonResponse<span class="token punctuation">(</span>response<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="json-파일로-보관" tabindex="-1"><a class="header-anchor" href="#json-파일로-보관" aria-hidden="true">#</a> JSON 파일로 보관</h3><ul><li>dump</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> movies/fixtures
$ python <span class="token parameter variable">-Xutf8</span> manage.py dumpdata movies <span class="token parameter variable">--indent</span> <span class="token number">4</span> <span class="token operator">&gt;</span> ./movies/fixtures/movies.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>load</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ python manage.py loaddata movies.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","tmdb.html.vue"]]);export{r as default};

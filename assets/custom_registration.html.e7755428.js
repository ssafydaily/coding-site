import{_ as c,r as a,o as l,c as i,a as n,b as t,d as s,w as u,e as r}from"./app.2a81dd92.js";const d={},k=n("h1",{id:"django-allauth-custom-user-registration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#django-allauth-custom-user-registration","aria-hidden":"true"},"#"),t(" django-allauth + Custom User/Registration")],-1),m={class:"custom-container tip"},v=n("p",{class:"custom-container-title"},"TIP",-1),g=n("code",null,"dj-rest-auth",-1),b={href:"https://tolu.hashnode.dev/how-to-serialize-custom-user-model-and-register-new-instances-with-django-rest-framework-1",target:"_blank",rel:"noopener noreferrer"},_=r(`<h2 id="사용자-정의-모델" tabindex="-1"><a class="header-anchor" href="#사용자-정의-모델" aria-hidden="true">#</a> 사용자 정의 모델</h2><ul><li><code>AbstractUser</code> 를 상속 받아서 필요한 필드를 추가한 <strong>Custom <code>User</code></strong> 모델 정의</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># /accounts/models.py</span>
<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models
<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>models <span class="token keyword">import</span> AbstractUser

<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>AbstractUser<span class="token punctuation">)</span><span class="token punctuation">:</span>
    age <span class="token operator">=</span> models<span class="token punctuation">.</span>PositiveIntegerField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    occupation <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li><code>settings.py</code> 에 &#39;AUTH_USER_MODEL&#39; 로 등록하고 <code>makemigration</code> 과 <code>migrate</code> 실행</li></ul></blockquote><h2 id="serializer-정의" tabindex="-1"><a class="header-anchor" href="#serializer-정의" aria-hidden="true">#</a> Serializer 정의</h2><ul><li>아래와 같이 회원 가입에 사용할 <code>Serializer</code> 를 정의</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># accounts/serializers.py</span>
<span class="token keyword">from</span> allauth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>adapter <span class="token keyword">import</span> get_adapter
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers
<span class="token keyword">from</span> dj_rest_auth<span class="token punctuation">.</span>registration<span class="token punctuation">.</span>serializers <span class="token keyword">import</span> RegisterSerializer
<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> User

<span class="token keyword">class</span> <span class="token class-name">CustomRegisterSerializer</span><span class="token punctuation">(</span>RegisterSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    age <span class="token operator">=</span> serializers<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>max_value<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> min_value<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    occupation <span class="token operator">=</span> serializers<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> User
        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;occupation&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Settings.py</code> 에 등록</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># pjt_folder/settings.py</span>
REST_AUTH <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;SESSION_LOGIN&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>  <span class="token comment"># 회원 가입 후에 token 반환하도록 설정</span>
    <span class="token string">&#39;REGISTER_SERIALIZER&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;accounts.serializers.CustomRegisterSerializer&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-clean-data-save-재정의" tabindex="-1"><a class="header-anchor" href="#get-clean-data-save-재정의" aria-hidden="true">#</a> <code>get_clean_data()</code> / <code>save()</code> 재정의</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">CustomRegisterSerializer</span><span class="token punctuation">(</span>RegisterSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    age <span class="token operator">=</span> serializers<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>max_value<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> min_value<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    occupation <span class="token operator">=</span> serializers<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> User
        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;occupation&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_cleaned_data</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;password1&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;password1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;password2&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;password2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;email&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;occupation&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>validated_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;occupation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>

    <span class="token comment"># save 재정의</span>
    <span class="token keyword">def</span> <span class="token function">save</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
        adapter <span class="token operator">=</span> get_adapter<span class="token punctuation">(</span><span class="token punctuation">)</span>
        user <span class="token operator">=</span> adapter<span class="token punctuation">.</span>new_user<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cleaned_data <span class="token operator">=</span> self<span class="token punctuation">.</span>get_cleaned_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
        user<span class="token punctuation">.</span>age <span class="token operator">=</span> self<span class="token punctuation">.</span>cleaned_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span>
        user<span class="token punctuation">.</span>occupation <span class="token operator">=</span> self<span class="token punctuation">.</span>cleaned_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;occupation&#39;</span><span class="token punctuation">)</span>
        user<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
        adapter<span class="token punctuation">.</span>save_user<span class="token punctuation">(</span>request<span class="token punctuation">,</span> user<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        <span class="token keyword">return</span> user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,12);function h(f,y){const e=a("Badge"),p=a("RouterLink"),o=a("ExternalLinkIcon");return l(),i("div",null,[k,n("div",m,[v,n("ul",null,[n("li",null,[g,t(" 설치 "),s(p,{to:"/django/dj_rest.html"},{default:u(()=>[s(e,{type:"tip",text:"link",vertical:"middle"})]),_:1})]),n("li",null,[t("커스텀 사용자 모델을 사용한 회원가입 "),n("a",b,[s(e,{type:"tip",text:"link",vertical:"middle"}),s(o)])])])]),_])}const x=c(d,[["render",h],["__file","custom_registration.html.vue"]]);export{x as default};

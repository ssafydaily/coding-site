import{_ as n,o as s,c as a,e as t}from"./app.2a81dd92.js";const p={},e=t(`<h1 id="object-class" tabindex="-1"><a class="header-anchor" href="#object-class" aria-hidden="true">#</a> Object / Class</h1><h2 id="class" tabindex="-1"><a class="header-anchor" href="#class" aria-hidden="true">#</a> Class</h2><h3 id="instance-vs-class-variable" tabindex="-1"><a class="header-anchor" href="#instance-vs-class-variable" aria-hidden="true">#</a> instance vs class variable</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> <span class="token string">&#39;person&#39;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;anonymous&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name

    <span class="token keyword">def</span> <span class="token function">laugh</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">가 웃는다.&#39;</span></span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&#39;IU&#39;</span><span class="token punctuation">)</span>
p2 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&#39;john&#39;</span><span class="token punctuation">)</span>
p3 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>

p1<span class="token punctuation">.</span>laugh<span class="token punctuation">(</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span>laugh<span class="token punctuation">(</span><span class="token punctuation">)</span>
p1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span>                <span class="token comment"># 속성 동적으로 추가됨</span>
Person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="static-method-vs-class-method" tabindex="-1"><a class="header-anchor" href="#static-method-vs-class-method" aria-hidden="true">#</a> static method vs. class method</h3><ul><li><p>왜?</p></li><li><p>class method의 첫번째 인자</p></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>

    class_var <span class="token operator">=</span> <span class="token string">&#39;Person class&#39;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Person init&#39;</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">class_method</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># cls</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>class_var<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>
    class_var <span class="token operator">=</span> <span class="token string">&#39;Student class&#39;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Student init&#39;</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token punctuation">)</span>
Person<span class="token punctuation">.</span>class_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
Student<span class="token punctuation">.</span>class_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>staic method</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>

    class_var <span class="token operator">=</span> <span class="token string">&#39;class varialbe&#39;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Person init&#39;</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">class_method</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># cls</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;class method&#39;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span>class_var<span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">static_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># 인자 없음</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;static method&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Student init&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">learn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;learning...&#39;</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token punctuation">)</span>
Person<span class="token punctuation">.</span>class_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
Student<span class="token punctuation">.</span>class_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="다중-상속" tabindex="-1"><a class="header-anchor" href="#다중-상속" aria-hidden="true">#</a> 다중 상속</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
    gender <span class="token operator">=</span> <span class="token string">&#39;NOT&#39;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;unknown&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name

    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;저는 </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">입니다.&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>name<span class="token operator">=</span>name<span class="token punctuation">)</span>
        Person<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token string">&#39;남자&#39;</span>

    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;저는 멋진 </span><span class="token interpolation"><span class="token punctuation">{</span>Person<span class="token punctuation">.</span>gender<span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">입니다.&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Mother</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>name<span class="token operator">=</span>name<span class="token punctuation">)</span>
        Person<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token string">&#39;여자&#39;</span>

    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;저는 아름다운 </span><span class="token interpolation"><span class="token punctuation">{</span>Person<span class="token punctuation">.</span>gender<span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">입니다.&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Son</span><span class="token punctuation">(</span>Father<span class="token punctuation">,</span> Mother<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">class</span> <span class="token class-name">Daughter</span><span class="token punctuation">(</span>Mother<span class="token punctuation">,</span> Father<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

f <span class="token operator">=</span> Father<span class="token punctuation">(</span><span class="token string">&#39;홍길동&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> f<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span>
m <span class="token operator">=</span> Mother<span class="token punctuation">(</span><span class="token string">&#39;심청이&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> m<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> Son<span class="token punctuation">(</span><span class="token string">&#39;견우&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> s<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> Daughter<span class="token punctuation">(</span><span class="token string">&#39;직녀&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> d<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="public-protected-private" tabindex="-1"><a class="header-anchor" href="#public-protected-private" aria-hidden="true">#</a> public, protected, private</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span><span class="token punctuation">:</span>
    _protected_var <span class="token operator">=</span> <span class="token number">0</span>
    __private_var <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;MyClass 생성&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","04_oop.html.vue"]]);export{k as default};
